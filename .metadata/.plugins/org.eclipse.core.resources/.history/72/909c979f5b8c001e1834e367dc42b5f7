package movieConnect;

import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.awt.*;

/**
 * FriendsPageJFrame represents the JFrame needed for the Movie Connect
 * Application.
 *
 * @author Kamdon Bird
 * @author Haiyang Liu
 */
@SuppressWarnings("serial")
public class FriendsPageJFrame2 extends JFrame implements ActionListener {

	// Path to the background image
	private static final String BACKGROUND_IMAGE_PATH = "src/movieConnect/Resources/image/background.jpg";
	

	/**
	 * Constructor for FriendsPageJFrame.
	 */
	public FriendsPageJFrame2() {
		userName = User;
		initializeJFrame();
		addBackground();
		addButtons();
		addComponentListener(new FrameResizeListener());
		revalidate();
		repaint();
		
	}
	
	/**
	 * Adds a background image to the JFrame.
	 */
	/**
	 * Adds a background image to the JFrame.
	 */
	private void addBackground() {
	    ImageIcon originalImageIcon = new ImageIcon(BACKGROUND_IMAGE_PATH);
	    
	    // Check if the image icon has image data
	    if (originalImageIcon.getImageLoadStatus() == MediaTracker.COMPLETE) {
	        Image originalImage = originalImageIcon.getImage();

	        // Scale the image to fit the frame
	        Image scaledImage = originalImage.getScaledInstance(getWidth(), getHeight(), Image.SCALE_SMOOTH);

	        // Check if the scaled image is not null
	        if (scaledImage != null) {
	            // Create a new ImageIcon with the scaled image
	            ImageIcon backgroundImage = new ImageIcon(scaledImage);

	            JLabel backgroundLabel = new JLabel(backgroundImage);
	            backgroundLabel.setBounds(0, 0, getWidth(), getHeight());
	            add(backgroundLabel);
	        } else {
	            System.out.println("Scaled image is null.");
	        }
	    } else {
	        System.out.println("Failed to load the background image.");
	    }
	}

	/**
	 * Initializes the JFrame settings.
	 */
	private void initializeJFrame() {
		setExtendedState(JFrame.MAXIMIZED_BOTH);
		setTitle("Friends Page");
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setVisible(true);
		setLayout(null);
	}

	/**
	 * Adds buttons to the JFrame.
	 */
	private void addButtons() {
		JButton topLeftButton = createButton("Back");
		topLeftButton.setBounds(10, 10, 80, 30);
		add(topLeftButton);

		JButton topRightButton = createButton("Movie Finder");
		topRightButton.setBounds(getWidth() - 190, 10, 180, 30);
		add(topRightButton);
	}

	private JButton createButton(String buttonText) {
		JButton button = new JButton(buttonText);
		button.addActionListener(this);
		return button;
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		// Handle button clicks.
		String actionCommand = e.getActionCommand();
		if ("Back".equals(actionCommand)) {
			System.out.println("Button Clicked: " + actionCommand);
			this.setVisible(false);
			new MainPageJFrame(activeUser);
		} else if ("Movie Finder".equals(actionCommand)) {
			System.out.println("Button Clicked: " + actionCommand);
//			this.setVisible(false);
			new MovieSuggestionPageJFrame();
		}
	}

	private class FrameResizeListener extends ComponentAdapter {
		@Override
		public void componentResized(ComponentEvent e) {
			// Listen for frame resize events and adjust button positions accordingly.
			int frameWidth = getWidth();
			int buttonX = frameWidth - 190;

			for (Component component : getContentPane().getComponents()) {
				if (component instanceof JButton) {
					JButton button = (JButton) component;
					if ("Movie Connection".equals(button.getText())) {
						button.setBounds(buttonX, 10, 180, 30);
					}
				}
			}
		}
	}
}