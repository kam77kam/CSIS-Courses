package ceHeapSort;

import edu.princeton.cs.algs4.StdOut;
import edu.princeton.cs.algs4.MaxPQ;

/**
 * The main method demonstrates the use of a Max Priority Queue to order a
 * collection of Mail objects. It creates an array of 25 random Mail objects,
 * prints them, and then orders the mail from most urgent to least urgent using
 * a Max Priority Queue. The ordered mail items are dequeued and printed in
 * priority order.
 * 
 * @author CSIS + Kamdon Bird
 */
public class DemoHeap {

	public static void main(String[] args) {
		// Create an array of 25 random Mail objects and print it.
		StdOut.println("Random Mail:");
		StdOut.println("------------");
		Mail[] mailArray = new Mail[25];
		for (int i = 0; i < 25; i++) {
			Mail m = new Mail();
			mailArray[i] = m;
			StdOut.println(m.toString());
		}
		StdOut.println();
		// List the mail from most urgent to least urgent in linear time.
		StdOut.println("Ordered Mail:");
		StdOut.println("-------------");
		// Create a max priority queue and add mail items to it
		MaxPQ<Mail> maxPQ = new MaxPQ<>(mailArray);
		// Dequeue and print the mail items in priority order
		while (!maxPQ.isEmpty()) {
			Mail m = maxPQ.delMax();
			StdOut.println(m.toString());
		}
	}
}
